# Application Configuration
spring.application.name=docassist
server.port=8080

# Database Configuration (PostgreSQL with PGVector) - commented out for testing
# Database Configuration (PostgreSQL with PGVector)
spring.datasource.url=jdbc:postgresql://postgres:5432/docassist
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Use H2 for initial testing - commented out for Docker deployment
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=password
# spring.h2.console.enabled=true

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Ollama Configuration
ollama.base-url=http://localhost:11434
ollama.model-name=llama3.2

# File Upload Configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# OCR Configuration
tesseract.path=/usr/bin/tesseract
tesseract.data-path=./tessdata

# Logging Configuration
logging.level.com.marsk.docassist=INFO
logging.level.dev.langchain4j=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Spring AI Configuration (for backup integrations)
spring.ai.ollama.base-url=http://localhost:11434
spring.ai.ollama.chat.model=llama3.2

# Development Profile Settings
spring.profiles.active=dev
